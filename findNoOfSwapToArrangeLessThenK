/*******************************************************************
*  Given an array of n positive integers and a number k. Find the 
*  minimum number of swaps required to bring all the numbers less 
*  than or equal to k together.
*  Input:  arr[] = {2, 1, 5, 6, 3}, k = 3
*  Output: 1

*  Explanation: 
*  To bring elements 2, 1, 3 together, swap 
*  element '5' with '3' such that final array
*  will be-
*  arr[] = {2, 1, 3, 6, 5}
********************************************************************/

#include <iostream>
#include <vector>
#include <sstream>
#include <string>
using namespace std; 

int findMinimumSwap(int arr[] , int size , int k)
{
    int end =size-1;
    int tmp =0;
    int start =0;
    int count =0;
    while(start < end)
    {
         if(arr[start] > k)
         {
             while(start < end)
             {
                
                if(arr[end] <= k)
                {
                    tmp = arr[start];
                    arr[start] = arr[end];
                    arr[end] = tmp;
                    count++;
                    end--; 
                    break;
                }
                end--; 
             }
         }
         
         start++;
    }
    
    
    return count;
}

int main() 
{ 

    int arr[] = {2, 7, 9, 5, 8, 7, 4};
    //{2, 4, 9, 5, 8, 7, 7};
    int k = 5;
    int n = sizeof(arr) / sizeof(arr[0]);
    cout<<" "<<findMinimumSwap(arr,n , k);
	return 0; 
} 
