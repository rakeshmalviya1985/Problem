/*******************************************************************
*  find more detail on youtube @equalconnect Coach
*  Shift all the zeros at the end
********************************************************************/

#include <iostream>
#include <vector>
#include <sstream>
#include <string>
using namespace std; 

void shiftZeroAtEnd_m1(int arr[], int size)
{
    int j = size-1;
    int tmp;
    int i = 0;
    while(i<size && i<j)
    {
        if(arr[j] != 0 && arr[i] == 0)
        {
            tmp = arr[i];
            arr[i] = arr[j];
            arr[j] = tmp;
           i++;
           j--;
        }
        else if(arr[j] != 0 && arr[i] != 0)
           i++;
        else
           j--;
    }
    
    for(int i = 0;i<size;i++)
       cout<<" "<<arr[i];
}

void shiftZeroAtEnd_m2(int arr[] , int size)
{
    int j =0;
    int tmp =0;
    
    for(int i =0;i<size;i++)
    {
        if(arr[i] != 0)
        {
            tmp = arr[i];
            arr[i] = arr[j];
            arr[j] = tmp;
            j++;
        }
    }
    for(int i = 0;i<size;i++)
       cout<<" "<<arr[i];
}

void shiftZeroAtEnd_m3(int arr[] , int size)
{
    int j =size-1;
    int tmp =0;
    
    for(int i =size-1;i>=0;i--)
    {
        if(arr[i] != 0)
        {
            tmp = arr[i];
            arr[i] = arr[j];
            arr[j] = tmp;
            j--;
        }
    }
    for(int i = 0;i<size;i++)
       cout<<" "<<arr[i];
}
int main() 
{ 

    int arr[] = {1, 9, 8, 4, 0, 0, 2, 7, 0, 6, 0, 9}; 
    int n = sizeof(arr) / sizeof(arr[0]);
    shiftZeroAtEnd_m2(arr,n);
	return 0; 
} 

