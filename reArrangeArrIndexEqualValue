/*******************************************************************
*  find more detail on youtube @equalconnect Coach
*  Reaarange the array in such a way so that its index and value at index is same
*  input : {-1, -1, 6, 1, 9,3, 2, -1, 4, -1};
*  output: {-1 1 2 3 4 -1 6 -1 -1 9 } 
*  time complexity : O(logn) , space Complexity : O(1)
********************************************************************/
#include <bits/stdc++.h> 
using namespace std; 
  

#include <stdio.h> 
  
int* reArrangeArrIndexEqualValue(int arr[] , int size) 
{ 
    int *ptr = NULL;
    int tmp = -1;
      //{-1, 1, 2, 3, 4, -1, 6, -1, -1, 9}
      for(int i =0;i<size;i++)
      {
          if(arr[i] >=0)
          {
              if(i != arr[i])
              {
                  tmp = arr[arr[i]];
                  arr[arr[i]] = arr[i];
                  arr[i] = tmp;
              }
          }
      }
      ptr = arr;

       return ptr;
} 
  
int main(void) 
{ 
    int n, arr[]={-1, -1, 6, 1, 9,3, 2, -1, 4, -1};
    n = sizeof(arr) / sizeof(arr[0]);

    int *ptr = reArrangeArrIndexEqualValue(arr, n);
  
  for(int i =0;i<n;i++)
  cout<<" "<<ptr[i];
    return 0; 
 
} 
