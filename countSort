/*******************************************************************
*  find more detail on youtube @equalconnect Coach
*  Count sort
*  input : {2,1,4,3,5,6};
*  output: {1,2,3,4,5,6 } 
*  time complexity : O(logn) , space Complexity : O(1)
********************************************************************/
// C++ program to implement recursive Binary Search 
#include <bits/stdc++.h>
#define range 255 
using namespace std; 

void countSort(int arr[] , int n , int k)
{
    int tmpArr[n];
    int count[k] = {0};
    
    for(int i =0;i<n;i++)
    ++count[arr[i]];
    
    for(int i =1;i<=k;i++)
      count[i]+=count[i-1];

      for (int i = 0; i < k; i++)
        cout << count[i] << " ";   

        
    for(int i =n-1;i>=0;i--) 
    {
     tmpArr[count[arr[i]]-1] = arr[i];
     --count[arr[i]];
    }
     
     for (int i = 0; i<n ;i++) 
     {
        arr[i] = tmpArr[i]; 
        cout<<" "<<arr[i];
     }
    
}
  
int getMax(int arr[] , int size)
{
    int tmpMax = INT_MIN;
    
    for(int i = 0;i<size;i++)
    {
        if(arr[i]>tmpMax)
         tmpMax = arr[i];
    }
  
  
    
    return tmpMax;
}
int main(void) 
{ 
    int n, arr[]={5,3,2,4,9};
    n = sizeof(arr) / sizeof(arr[0]);

    int max = getMax(arr,n);
    cout<<" max : "<<max<<"\n";
    

    countSort(arr,n,max);
       
    
    return 0;
 
} 
