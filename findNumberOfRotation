
/*******************************************************************
*  find more detail on youtube @equalconnect Coach
*  find the number of rotation in given array 
*  time complexity : O(logn) , space Complexity : O(1)
********************************************************************/

#include <bits/stdc++.h> 
using namespace std; 
  

int findRotation(int arr[] , int size) 
{ 
     
     for(int i = 0;i<size;i++)
     {
         if(arr[i+1] < arr[i])
         return size-(i+1);
     }
     
     return 0;
} 
  
int main(void) 
{ 
    int arr[] = {10, 1, 2, 3, 4, 5, 6, 7, 8, 9}; 
    int n = sizeof(arr)/sizeof(arr[0]); 
    cout << "\nMax sum is " << findRotation(arr, n); 
    return 0; 
}  
